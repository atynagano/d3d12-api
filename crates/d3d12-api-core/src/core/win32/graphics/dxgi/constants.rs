#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(unused_parens)]
#![allow(unused_imports, dead_code, unused_variables)]

use std::ffi::c_void;
use std::ptr::{NonNull, null};
use std::mem::{size_of_val, transmute};
use crate::helpers::*;
use super::*;
use crate::core::win32::foundation::*;
use crate::core::win32::system::com::*;

use std::ops::{BitOr, BitOrAssign};
pub const DXGI_USAGE_SHADER_INPUT: u32 = 0x10;
pub const DXGI_USAGE_RENDER_TARGET_OUTPUT: u32 = 0x20;
pub const DXGI_USAGE_BACK_BUFFER: u32 = 0x40;
pub const DXGI_USAGE_SHARED: u32 = 0x80;
pub const DXGI_USAGE_READ_ONLY: u32 = 0x100;
pub const DXGI_USAGE_DISCARD_ON_PRESENT: u32 = 0x200;
pub const DXGI_USAGE_UNORDERED_ACCESS: u32 = 0x400;
pub const DXGI_MAP_READ: u32 = 0x1;
pub const DXGI_MAP_WRITE: u32 = 0x2;
pub const DXGI_MAP_DISCARD: u32 = 0x4;
pub const DXGI_ENUM_MODES_INTERLACED: u32 = 0x1;
pub const DXGI_ENUM_MODES_SCALING: u32 = 0x2;
pub const DXGI_MAX_SWAP_CHAIN_BUFFERS: u32 = 0x10;
pub const DXGI_PRESENT_TEST: u32 = 0x1;
pub const DXGI_PRESENT_DO_NOT_SEQUENCE: u32 = 0x2;
pub const DXGI_PRESENT_RESTART: u32 = 0x4;
pub const DXGI_PRESENT_DO_NOT_WAIT: u32 = 0x8;
pub const DXGI_PRESENT_STEREO_PREFER_RIGHT: u32 = 0x10;
pub const DXGI_PRESENT_STEREO_TEMPORARY_MONO: u32 = 0x20;
pub const DXGI_PRESENT_RESTRICT_TO_OUTPUT: u32 = 0x40;
pub const DXGI_PRESENT_USE_DURATION: u32 = 0x100;
pub const DXGI_PRESENT_ALLOW_TEARING: u32 = 0x200;
pub const DXGI_MWA_NO_WINDOW_CHANGES: u32 = 0x1;
pub const DXGI_MWA_NO_ALT_ENTER: u32 = 0x2;
pub const DXGI_MWA_NO_PRINT_SCREEN: u32 = 0x4;
pub const DXGI_MWA_VALID: u32 = 0x7;
pub const DXGI_ENUM_MODES_STEREO: u32 = 0x4;
pub const DXGI_ENUM_MODES_DISABLED_STEREO: u32 = 0x8;
pub const DXGI_SHARED_RESOURCE_READ: u32 = 0x80000000;
pub const DXGI_SHARED_RESOURCE_WRITE: u32 = 0x1;
pub const DXGI_DEBUG_BINARY_VERSION: u32 = 0x1;
pub const DXGI_DEBUG_ALL: GUID = GUID::from_u128(0xe48ae283da80490b87e643e9a9cfda08u128);
pub const DXGI_DEBUG_DX: GUID = GUID::from_u128(0x35cdd7fc13b2421da5d77e4451287d64u128);
pub const DXGI_DEBUG_DXGI: GUID = GUID::from_u128(0x25cddaa4b1c647e1ac3e98875b5a2e2au128);
pub const DXGI_DEBUG_APP: GUID = GUID::from_u128(0x06cd6e0142194ebd870927ed23360c62u128);
pub const DXGI_INFO_QUEUE_MESSAGE_ID_STRING_FROM_APPLICATION: u32 = 0x0;
pub const DXGI_INFO_QUEUE_DEFAULT_MESSAGE_COUNT_LIMIT: u32 = 0x400;
pub const DXGI_CREATE_FACTORY_DEBUG: u32 = 0x1;
pub const DXGI_ERROR_INVALID_CALL: i32 = -0x7785FFFF;
pub const DXGI_ERROR_NOT_FOUND: i32 = -0x7785FFFE;
pub const DXGI_ERROR_MORE_DATA: i32 = -0x7785FFFD;
pub const DXGI_ERROR_UNSUPPORTED: i32 = -0x7785FFFC;
pub const DXGI_ERROR_DEVICE_REMOVED: i32 = -0x7785FFFB;
pub const DXGI_ERROR_DEVICE_HUNG: i32 = -0x7785FFFA;
pub const DXGI_ERROR_DEVICE_RESET: i32 = -0x7785FFF9;
pub const DXGI_ERROR_WAS_STILL_DRAWING: i32 = -0x7785FFF6;
pub const DXGI_ERROR_FRAME_STATISTICS_DISJOINT: i32 = -0x7785FFF5;
pub const DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE: i32 = -0x7785FFF4;
pub const DXGI_ERROR_DRIVER_INTERNAL_ERROR: i32 = -0x7785FFE0;
pub const DXGI_ERROR_NONEXCLUSIVE: i32 = -0x7785FFDF;
pub const DXGI_ERROR_NOT_CURRENTLY_AVAILABLE: i32 = -0x7785FFDE;
pub const DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED: i32 = -0x7785FFDD;
pub const DXGI_ERROR_REMOTE_OUTOFMEMORY: i32 = -0x7785FFDC;
pub const DXGI_ERROR_ACCESS_LOST: i32 = -0x7785FFDA;
pub const DXGI_ERROR_WAIT_TIMEOUT: i32 = -0x7785FFD9;
pub const DXGI_ERROR_SESSION_DISCONNECTED: i32 = -0x7785FFD8;
pub const DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE: i32 = -0x7785FFD7;
pub const DXGI_ERROR_CANNOT_PROTECT_CONTENT: i32 = -0x7785FFD6;
pub const DXGI_ERROR_ACCESS_DENIED: i32 = -0x7785FFD5;
pub const DXGI_ERROR_NAME_ALREADY_EXISTS: i32 = -0x7785FFD4;
pub const DXGI_ERROR_SDK_COMPONENT_MISSING: i32 = -0x7785FFD3;
pub const DXGI_ERROR_NOT_CURRENT: i32 = -0x7785FFD2;
pub const DXGI_ERROR_HW_PROTECTION_OUTOFMEMORY: i32 = -0x7785FFD0;
pub const DXGI_ERROR_DYNAMIC_CODE_POLICY_VIOLATION: i32 = -0x7785FFCF;
pub const DXGI_ERROR_NON_COMPOSITED_UI: i32 = -0x7785FFCE;
pub const DXGI_ERROR_MODE_CHANGE_IN_PROGRESS: i32 = -0x7785FFDB;
pub const DXGI_ERROR_CACHE_CORRUPT: i32 = -0x7785FFCD;
pub const DXGI_ERROR_CACHE_FULL: i32 = -0x7785FFCC;
pub const DXGI_ERROR_CACHE_HASH_COLLISION: i32 = -0x7785FFCB;
pub const DXGI_ERROR_ALREADY_EXISTS: i32 = -0x7785FFCA;

